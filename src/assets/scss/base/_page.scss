///
/// Dimension by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Basic */

	// MSIE: Required for IEMobile.
		@-ms-viewport {
			width: device-width;
		}

	// Ensures page width is always >=320px.
		@include breakpoint(xsmall) {
			html, body {
				min-width: 320px;
			}
		}

	body {
		background: _palette(bg);
		
		// Prevents animation/transition "flicker" on page load.
		// Automatically added/removed by js/main.js.
			&.is-loading,
			.body.is-loading,
			&.is-switching {
				*, *:before, *:after {
					@include vendor('animation', 'none !important');
					@include vendor('transition', 'none !important');
					@include vendor('transition-delay', 'none !important');
				}
			}

	}

	.features {	
		@supports(display: grid) {
			display: grid;
			color:gold;
			//grid-template-columns: repeat(3, 1fr);
			grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
			grid-gap: 6rem;
			align-items: start;
			background-color: black;
		}
	}

.feature {
    float: left;
    width: 33.3333%;
	margin-bottom: 6rem;
	text-align: center;

    @supports(display: grid) {
        width: auto;
        margin-bottom: 0;
    }

    display: grid;
    grid-template-columns: min-content 1fr;
    grid-row-gap: 1.5rem;
    grid-column-gap: 2.5rem;

    &__icon {
        fill: 'gold';
        width: 3rem;
        height: 3rem;
        grid-row: 1 / span 2;
    }

    &__text {
        font-size: 1.7rem;
	}
	&__h4{
		width: 50vw;
	}
}


.homes {
    grid-column: center-start / center-end;
    margin: 15rem 0;

    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
    grid-gap: 7rem;
}

.home {
    background-color: silver;

    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-row-gap: 3.5rem;

    &__img {
        width: 100%;
        grid-row: 1 / 2;
        grid-column: 1 / -1;
        z-index: 1;
    }

    &__like {
        grid-row: 1 / 2;
        grid-column: 2 / 3;
        fill: gold;
        height: 2.5rem;
        width: 2.5rem;
        z-index: 2;
        justify-self: end;
        margin: 1rem;
    }

    &__name {
        grid-row: 1 / 2;
        grid-column: 1 / -1;
        justify-self: center;
        align-self: end;
        z-index: 3;

        width: 80%;
        // font-family: $font-display;
        font-size: 1.6rem;
        text-align: center;
        padding: 1.25rem;
        background-color: white;
        color: #fff;
        font-weight: 400;
        transform: translateY(50%);
    }

    &__location,
    &__rooms {
        margin-top: 2.5rem;
    }

    &__location,
    &__rooms,
    &__area,
    &__price {

        font-size: 1.5rem;
        margin-left: 2rem;

        display: flex;
        align-items: center;

        svg {
            fill: gold;
            height: 2rem;
            width: 2rem;
            margin-right: 1rem;
        }
    }

    &__btn {
        grid-column: 1 / -1;
    }
}



// ANIMATIONS

/* Make the element pulse (grow large and small slowly) */
/* Usage
    .myElement {
        animation: pulsate 1s ease-out;
        animation-iteration-count: infinite;
        opacity: 1; 
    }
*/
@-webkit-keyframes pulsate {
    0% {-webkit-transform: scale(0.1, 0.1); opacity: 0.0;}
    50% {opacity: 1.0;}
    100% {-webkit-transform: scale(1.2, 1.2); opacity: 0.0;}
}

/* Make the element's opacity pulse*/
/* Usage
    .myElement {
        animation: opacityPulse 1s ease-out;
        animation-iteration-count: infinite;
        opacity: 0; 
    }
*/
@-webkit-keyframes opacityPulse {
    0% {opacity: 0.0;}
    50% {opacity: 1.0;}
    100% {opacity: 0.0;}
}

/* Make the element's background pulse. I call this alertPulse because it is red. You can call it something more generic. */
/* Usage
    .myElement {
        animation: alertPulse 1s ease-out;
        animation-iteration-count: infinite;
        opacity: 1; 
    }
*/
@-webkit-keyframes alertPulse {
    0% {background-color: #9A2727; opacity: 1;}
    50% {opacity: red; opacity: 0.75; }
    100% {opacity: #9A2727; opacity: 1;}
}


/* Make the element rotate infinitely. */
/* 
Usage
    .myElement {
        animation: rotating 3s linear infinite;
    }
*/
@keyframes rotating {
  from {
    -ms-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -ms-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -webkit-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

